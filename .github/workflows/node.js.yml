# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  
  # AWS deploy
  aws-deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
    # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id:${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key:${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:sa-east-1a
    # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name simple-CICD \
            --deployment-group-name simple-CICD-grupo \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}

  # Heroku deploy
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Login to Heroku Container registry
  #       env:
  #         HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
  #       run: heroku container:login
  #     - name: Build and push
  #       env:
  #         HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
  #       run: heroku container:push -a ${{secrets.HEROKU_APP_NAME}} web
  #     - name: Release
  #       env:
  #         HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
  #       run: heroku container:release -a ${{secrets.HEROKU_APP_NAME}} web  
